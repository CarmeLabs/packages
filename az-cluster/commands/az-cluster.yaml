login: "az login"
login_sa: "echo 'Service account login not yet available for Azure'"
create_project: "az group create --name {resource_group} --location {location}"
create_server: "az vm create -n {server_name} -g {resource_group} --image {image_name} --authentication-type {server_auth} --admin-username User --admin-password Pass
set_project: "echo 'No need to set project in Azure.'"
set_zone: "echo 'No need to set project in Azure.'"
delete_project: "az group delete --name {resource_group} --yes"
list-locations: "az account list-locations"
autoscale: "echo 'Autoscaling currently not possible.'"
create_sp: "az ad sp create-for-rbac --role=Contributor --scopes=/subscriptions/${SUBSCRIPTION_ID} > sp.json"
create_cluster: "az aks create --name {cluster_name} ---resource-group {resource_group}  --location {location} --node-count {num_nodes} --node-vm-size {machine_type} --generate-ssh-keys"
describe_cluster: "az aks list --resource-group {resource_group}"
delete_cluster: "az aks delete --name {cluster_name} --resource-group {resource_group}"
get_credentials_cluster: "az aks get-credentials --resource-group {resource_group} --name {cluster_name}"
normal_size_cluster: "az aks scale --node-count {num_nodes} --name {cluster_name} --resource-group {resource_group}"
class_size: "az aks scale --node-count {num_nodes_class} --name {cluster_name} --resource-group {resource_group}"
create_acs: "az acs create --orchestrator-type=kubernetes --resource-group={resource_group}  --name={cluster_name} --dns-prefix={dns_prefix} --node-count={num_nodes} --node-vm-size={machine_type} --generate-ssh-keys"
describe_acs: "az acs list --resource-group={resource_group}"
delete_acs: "az acs delete --resource-group={resource_group} --name={cluster_name}"
get_credentials_acs: "az acs kubernetes get-credentials --resource-group={resource_group} --name={cluster_name}"
normal_size_acs: "az acs scale --resource-group={resource_group} --name={cluster_name} --new-agent-count {num_nodes})"
class_size_acs: "az acs scale --resource-group={resource_group} --name={cluster_name} --new-agent-count {num_nodes_class})"
install_helm: "helm init --client-only"
# Can't size to 0 {stop_cluster: "az acs scale --resource-group={resource_group} --name={cluster_name} --new-agent-count 0"
create_storage:  "az storage account create --resource-group={resource_group} --location={location} --sku=Standard_LRS --name={storage_account} --kind=Storage"
get_storage_key: "az storage account keys list --account-name={storage_account} --resource-group={resource_group} --output=json | jq .[0].value -r"
create_keyvault: "az keyvault create --name={cluster_name} --resource-group={resource_group} --location={location} --enabled-for-template-deployment true"
backup_private_key: "az keyvault secret set --vault-name={cluster_name} --name=id-rsa-{cluster_name} --file=~/.ssh/id_rsa_{cluster_name}"
backup_public_key: "az keyvault secret set --vault-name={cluster_name} --name=id-rsa{cluster_name}-pub --file=~/.ssh/id_rsa_{cluster_name}.pub"
get_private_key: "az keyvault secret show --vault-name={cluster_name} --name=id-rsa-{cluster_name}"
get_public_key: "az keyvault secret show --vault-name={cluster_name} --name=id-rsa{cluster_name}-pub"
