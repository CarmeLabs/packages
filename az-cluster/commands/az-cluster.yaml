show_config: "cat ./config/az-cluster.yaml"
login: "az login"
set_subscription: az account set --subscription {subscription}
list_subscriptions: az account list --refresh --output table
create_group: "az group create --name {resource_group} --location {location} --output table"
delete_group: "az group delete --name {resource_group} --yes"
register: [register0, register1, register2,register3]
register0: "az provider register --name Microsoft.Network --wait"
register1: "az provider register --name Microsoft.Compute --wait"
register2: "az provider register --name Microsoft.Storage --wait"
register3: "az provider register --name Microsoft.ContainerService --wait"
create_key: [create_key0, create_key1]
create_key0: "mkdir ./config/ssh/{cluster_name}"
create_key1: "cd ./config/ssh/{cluster_name} && ssh-keygen -f ssh-key-{cluster_name} -N ''"
list-locations: "az account list-locations"
create: "cd ./config/ssh/{cluster_name} && az aks create --name {cluster_name} --resource-group {resource_group}  --ssh-key-value ssh-key-{cluster_name}.pub  --node-count {num_nodes} --node-vm-size {machine_type} --kubernetes-version {kubernetes_version} --output table"
describe: "az aks list --resource-group {resource_group}"
delete: "az aks delete --name {cluster_name} --resource-group {resource_group} --yes"
install_kubectl: "az aks install-cli"
get_credentials: "az aks get-credentials --name {cluster_name} --resource-group {resource_group}  --output table"
normal_size: "az aks scale --node-count {num_nodes} --name {cluster_name} --resource-group {resource_group}"
class_size: "az aks scale --node-count {num_nodes_class} --name {cluster_name} --resource-group {resource_group}"
install_helm: "helm init --client-only"
# Can't size to 0 {stop_cluster: "az acs scale --resource-group={resource_group} --name={cluster_name} --new-agent-count 0"
create_storage:  "az storage account create --resource-group={resource_group} --location={location} --sku=Standard_LRS --name={storage_account} --kind=Storage"
get_storage_key: "az storage account keys list --account-name={storage_account} --resource-group={resource_group} --output=json | jq .[0].value -r"
create_keyvault: "az keyvault create --name={cluster_name} --resource-group={resource_group} --location={location} --enabled-for-template-deployment true"
backup_private_key: "az keyvault secret set --vault-name={cluster_name} --name=id-rsa-{cluster_name} --file=~/.ssh/id_rsa_{cluster_name}"
backup_public_key: "az keyvault secret set --vault-name={cluster_name} --name=id-rsa{cluster_name}-pub --file=~/.ssh/id_rsa_{cluster_name}.pub"
get_private_key: "az keyvault secret show --vault-name={cluster_name} --name=id-rsa-{cluster_name}"
get_public_key: "az keyvault secret show --vault-name={cluster_name} --name=id-rsa{cluster_name}-pub"
